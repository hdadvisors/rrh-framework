# Homeownership {#part-2-1}

```{r setup}

library(tidyverse)
library(tidycensus)
library(janitor)
library(glue)
library(stringi)
library(zoo)
library(lubridate)
library(tigris)
library(scales)
library(plotly)
library(ggiraph)
library(ggtext)
library(hdatools)

rr <- c("51085", "51760", "51075", "51145", "51087", "51127", "51036", "51041")

pha <- c("51085", "51760", "51087", "51041")

rr_names <- c("Richmond city", "Hanover County", "Henrico County", "Chesterfield County",
              "Powhatan County", "Goochland County", "New Kent County", "Charles City County")

pha_names <- c("Richmond city", "Hanover County", "Henrico County", "Chesterfield County")

rr_df <- data.frame(GEOID = rr, NAME = rr_names)

years <- 2016:2020

```

This chapter covers the trends in the homeownership market across the four main Partnership for Housing Affordability localities, including the City of Richmond and counties of Chesterfield, Hanover, and Henrico.

## Supply

### Change in stock

The stock of homeowner housing has been growing across the region. From 2016 to 2020, owner-occupied housing has increased by 17,436---an increase of seven percent. Unsurprisingly, much of that growth (93 percent) has occurred in the single-family home market, including detached and attached homes. The largest share of that single-family home growth has occurred in Chesterfield County, where there was a net gain of 7,184 single-family owner-occupied homes.

```{r oo-structure-data, eval=FALSE}

# Table B25127: Tenure by year structure built by units in structure

b25127_vars <- load_variables(2020, "acs5") |> 
  filter(str_sub(name, end = 6) %in% "B25127")

b25127_raw <- map_dfr(years, function(yr){
  b25127_pull <- get_acs(
    geography = "county",
    state = "VA",
    table = "B25127",
    year = yr,
    survey = "acs5",
    cache_table = TRUE
  ) |> 
    mutate(year = yr)
})

b25127_vars_cleaned <- b25127_vars |> 
  separate(label, into = c("est", "total", "tenure", "yrbuilt", "structure"), sep = "!!") |> 
  select(variable = name, tenure, yrbuilt, structure) |> 
  drop_na() |> 
  mutate(across(.fns = ~str_remove_all(.x, ":"))) |> 
  mutate(tenure = case_when(
    tenure == "Owner occupied" ~ "Homeowner",
    tenure == "Renter occupied" ~ "Renter"
  ))

b25127_raw <- b25127_raw |> 
  subset(GEOID %in% rr) |> 
  right_join(b25127_vars_cleaned, by = "variable") |> 
  select(NAME, GEOID, year, tenure, yrbuilt, structure, estimate, moe)

b25127_data <- b25127_raw |> 
  mutate(NAME = str_remove_all(NAME, ", Virginia"),
         yrbuilt = str_remove_all(yrbuilt, "Built ")) |>
  select(NAME, GEOID, year, tenure, yrbuilt, structure, estimate) |> 
  mutate(structure = case_when(
    structure == "1, detached  or attached" ~ "Single-family",
    structure == "2 to 4" ~ "2 to 4 units",
    structure == "5 to 19" ~ "5 to 19 units",
    structure == "20 to 49" ~ "20 or more units",
    structure == "50 or more" ~ "20 or more units",
    TRUE ~ "Other"
  )) |> 
  group_by(NAME, GEOID, year, tenure, yrbuilt, structure) |> 
  summarise(estimate = sum(estimate)) |> 
  pivot_wider(
    names_from = year,
    values_from = estimate
  ) |> 
  mutate(change = `2020` - `2016`) |> 
  mutate(structure = fct_relevel(structure, "Single-family", "2 to 4 units", "5 to 19 units",
                                 "20 or more units", "Other")) |>
  ungroup()

write_rds(b25127_data, "data/b25127_data.rds")

```

```{r}
#| label: fig-oo-structure-plot
#| fig.cap: "Change in owner-occupied housing units by structure type"

b25127_str <-  read_rds("data/b25127_data.rds") |> 
  filter(tenure == "Homeowner") |>
  filter(NAME %in% pha_names) |>
  group_by(structure) |> 
  summarise(change = sum(change))

oo_structure_plot <- ggplot(b25127_str,
       aes(x = structure,
           y = change,
           fill = structure,
           data_id = change,
           tooltip = label_comma()(change))) +
  geom_col() +
  geom_col_interactive(size = 2) +
  scale_y_continuous(labels = label_comma()) +
  scale_x_discrete(labels = function(x) str_wrap(x, width = 16)) +
  scale_fill_pha() +
  labs(title = "Change in owner-occupied housing units by structure type",
       subtitle = "2016 to 2020",
       caption = "**Source:** U.S. Census Bureau, American Community Survey, Table B25127.") +
  theme_pha() +
  add_zero_line("y")

if (knitr::is_html_output()) {
  
  girafe(ggobj = oo_structure_plot,
         height_svg = 4) 
  
} else {
  
  oo_structure_plot
  
  }

```

### Age of stock

Between 2016 and 2020, almost all additions to the homeowner-occupied housing stock in the region were, intuitively, homes built in the past decade. However, there have also been thousands of net additions among homes built before 1940 and between 1980 and 2009. These homes were most likely previously occupied by renters and have now been reconverted into homeownership opportunities.

```{r}
#| label: fig-oo-age-plot
#| fig.cap: "Change in owner-occupied housing units by year built"

b25127_age <-  read_rds("data/b25127_data.rds") |> 
  filter(tenure == "Homeowner") |>
  filter(NAME %in% pha_names) |>
  group_by(yrbuilt) |> 
  summarise(change = sum(change))

oo_age_plot <- ggplot(b25127_age,
       aes(x = yrbuilt,
           y = change,
           fill = yrbuilt,
           data_id = change,
           tooltip = label_comma()(change))) +
  geom_col() + 
  geom_col_interactive(size = 2) +
  scale_y_continuous(labels = label_comma()) +
  scale_x_discrete(labels = function(x) str_wrap(x, width = 16)) +
  scale_fill_pha() +
  labs(title = "Change in owner-occupied housing units by year built",
       subtitle = "2016 to 2020",
       caption = "**Source:** U.S. Census Bureau, American Community Survey, Table B25127.") +
  theme_pha() +
  add_zero_line("y")

if (knitr::is_html_output()) {
  
  girafe(ggobj = oo_age_plot,
         height_svg = 4) 
  
} else {
  
  oo_age_plot
  
  }

```

### Bedrooms

The majority of new owner-occupied homes in the region have three or more bedrooms, continuing design and size trends prevalent since the mid 20th century. At the same time, homeowner households have become smaller, which creates a surplus of largely unused bedrooms across the market.

Smaller housing options exist largely in the City of Richmond or Henrico County. While single-family homes---or condo units---with one- or two- bedrooms are usually much more affordable, these housing options are often in older, but highly desirable neighborhoods in the City of Richmond (i.e., The Fan and Church Hill).

```{r oo-beds-data, eval=FALSE}

b25042_vars <- load_variables(2020, "acs5") |> 
  filter(str_sub(name, end = 6) %in% "B25042")

b25042_raw <- map_dfr(years, function(yr) {
  b25042_pull <- get_acs(
    geography = "county",
    state = "VA",
    table = "B25042",
    year = yr,
    survey = "acs5",
    cache_table = TRUE
  ) |> 
    mutate(year = yr)
})

b25042_vars_cleaned <- b25042_vars |> 
  separate(label, into = c("est", "total", "tenure", "br"), sep = "!!") |> 
  select(variable = name, tenure, br) |> 
  drop_na() |> 
  mutate(across(.fns = ~str_remove_all(.x, ":"))) |> 
  mutate(tenure = case_when(
    tenure == "Owner occupied" ~ "Homeowner",
    tenure == "Renter occupied" ~ "Renter"
  ))

b25042_raw <- b25042_raw |> 
  filter(GEOID %in% rr) |> 
  right_join(b25042_vars_cleaned, by = "variable") |> 
  select(NAME, GEOID, year, tenure, br, estimate)

b25042_data <- b25042_raw |> 
  mutate(NAME = str_remove_all(NAME, ", Virginia")) |>
  select(NAME, GEOID, year, tenure, br, estimate) |>
  pivot_wider(
    names_from = year,
    values_from = estimate
  ) |> 
  mutate(change = `2020` - `2016`) |> 
  mutate(br = fct_relevel(br, "No bedroom"))

write_rds(b25042_data, "data/b25042_data.rds")

```

```{r}
#| label: fig-oo-beds-plot
#| fig.cap: "Change in owner-occupied housing units by number of bedrooms"

b25042_data <-  read_rds("data/b25042_data.rds") |> 
  filter(tenure == "Homeowner") |>
  filter(NAME %in% pha_names) |>
  group_by(br) |> 
  summarise(change = sum(change))

oo_beds_plot <- ggplot(b25042_data,
       aes(x = br,
           y = change,
           fill = br,
           data_id = change,
           tooltip = label_comma()(change))) +
  geom_col() + 
  geom_col_interactive() +
  scale_y_continuous(labels = label_comma()) +
  scale_x_discrete(labels = function(x) str_wrap(x, width = 16)) +
  scale_fill_pha() +
  labs(title = "Change in owner-occupied housing units<br>by number of bedrooms",
       subtitle = "2016 to 2020",
       caption = "**Source:** U.S. Census Bureau, American Community Survey, Table B25042.") +
  theme_pha() +
  add_zero_line("y")

if (knitr::is_html_output()) {
  
  girafe(ggobj = oo_beds_plot,
         height_svg = 4) 
  
} else {
  
  oo_beds_plot
  
  }

```

### Production

All localities in the region experienced single-family construction declines as a result of the Great Recession from late 2007 to early 2012 --- especially Chesterfield and Henrico. Recovery has been unevenly distributed, however.

From 2010 onward, every locality has seen increasing single-family home construction, but the steepest increase has been in Chesterfield County. From 2010 to 2020, single-family home construction has gone from 545 units to 2,202 per year in a decade --- a 300% increase. Although Chesterfield County was on its way to pre-Recession levels, all other localities are seeing slow growth in the single-family home construction space.

```{r bps-data, eval=FALSE}

bps_years <- 2000:2021

header_rows <- read_csv("https://www2.census.gov/econ/bps/County/co2020a.txt", 
                        col_names = FALSE,
                        n_max = 2)

column_names <- header_rows %>%
  select(X1:X18) %>%
  t() %>%
  as_tibble() %>%
  mutate(group = rep(1:6, each = 3)) %>%
  group_by(group) %>%
  fill(V1, .direction = "updown") %>%
  mutate(names = paste0(V1, ": ", V2)) %>%
  pull(names)

cbps_raw <- map_df(bps_years, ~{
  raw <- read_csv(glue("https://www2.census.gov/econ/bps/County/co{.x}a.txt"), skip = 2,
                    col_names = FALSE) %>%
    select(X1:X18) %>%
    set_names(column_names)
  
  raw
  
})

# Read in latest 2020 cumulative data (through July)

cbps_ytd <- read_csv("https://www2.census.gov/econ/bps/County/co2207y.txt", 
                     col_names = FALSE,
                     skip = 2) |> 
  select(X1:X18) |> 
  set_names(column_names) |> 
  mutate(`Survey: Date` = 2022)

cbps_data <- cbps_raw %>% 
  bind_rows(cbps_ytd) |> 
  mutate(year = `Survey: Date`,
         GEOID = paste0(`FIPS: State`, `FIPS: County`)) %>%
  select(`1-unit: Bldgs`:GEOID) %>%
  filter(GEOID %in% rr) %>%
  pivot_longer(`1-unit: Bldgs`:`5+ units: Value`,
               names_to = "type",
               values_to = "value") %>%
  separate(type, into = c("Type", "col"), sep = ": ") %>%
  pivot_wider(names_from = col,
              values_from = value) %>%
  rename_with(tolower, Type:Value) %>% 
  select(GEOID, year, type:units)

rr_cbps <- cbps_data |> 
  right_join(rr_df, by = "GEOID") |> 
  select(GEOID, NAME, year, type:units)

write_rds(rr_cbps, "data/rr_cbps.rds")

```

```{r}
#| label: fig-bps-plot
#| fig.cap: "Single-family building permits"

pha_cbps <- read_rds("data/rr_cbps.rds") |> 
  filter(NAME %in% pha_names,
         type == "1-unit")

bps_plot <- ggplot(pha_cbps,
       aes(x = year, y = units, fill = NAME,
           data_id = units, tooltip = label_comma()(units))) +
  geom_col() +
  geom_col_interactive(size = 2) +
  facet_wrap(~NAME) +
  scale_y_continuous(labels = label_comma()) +
  scale_fill_pha() +
  labs(title = "Single-family building permits",
       subtitle = "2000 to 2020",
       caption = "**Source:** U.S. Census Bureau, Building Permits Survey.") +
  theme_pha() +
  add_zero_line("y")

if (knitr::is_html_output()) {
  
  girafe(ggobj = bps_plot,
         height_svg = 4) 
  
} else {
  
  bps_plot
  
  }

```

## Homeownership rate

### By locality

Since 2016, overall homeownership rates for localities in the region have increased slightly. This accounts for the net increase in homeowners (over 15,000) and relatively steady number of renters over this time period.

```{r}
#| label: fig-ho-rate-plot
#| fig.cap: "Homeownership rate by locality"

b25003_owner <- read_rds("data/b25003_data.rds") |> 
  filter(NAME %in% pha_names) |> 
  filter(tenure == "Homeowner")

ho_locality_plot <- ggplot(b25003_owner,
       aes(x = year, 
           y = pct, 
           fill = NAME,
           data_id = pct,
           tooltip = label_percent(accuracy = 0.1)(pct))) +
  facet_wrap(~NAME, nrow = 1) +
  geom_col(position = "dodge") + 
  geom_col_interactive(position = "dodge", size = 2) +
  scale_y_continuous(labels = label_percent()) +
  scale_fill_pha() +
  labs(title = "Homeownership rate by locality",
       subtitle = "2016 to 2020",
       fill = "Locality",
       caption = "**Source:** U.S. Census Bureau, American Community Survey, Table B25003.") +
  theme_pha() +
  add_zero_line("y") +
  theme(axis.text.x = element_text(angle = 90))

if (knitr::is_html_output()) {
  
  girafe(ggobj = ho_locality_plot,
         height_svg = 4) 
  
} else {
  
  ho_locality_plot
  
  }

```

### By age

Despite high rents, high debt, and low inventory, younger households (under 35) have made some progress toward homeownership since 2016. Their homeownership rate across the region increased from 30 to 35 percent. On the other hand, homeownership rates for middle-age and older households remained about the same from 2016 to 2020.

```{r ho-age-data, eval=FALSE}

b25007_vars <- load_variables(2020, "acs5") |> 
  filter(str_sub(name, end = 6) %in% "B25007")

b25007_raw <- map_dfr(years, function(yr){
   b25007_pull <- get_acs(
    geography = "county",
    state = "VA",
    table = "B25007",
    year = yr,
    survey = "acs5"
  ) |> 
    mutate(year = yr)
})

b25007_vars_cleaned <- b25007_vars |> 
  separate(label, into = c("est", "total", "tenure", "age"), sep = "!!") |> 
  select(variable = name, tenure, age) |> 
  mutate(across(.fns = ~str_remove_all(.x, ":")),
         across(.fns = ~str_remove_all(.x,"Householder "))) |>  
  mutate(tenure = case_when(
    tenure == "Owner occupied" ~ "Homeowner",
    tenure == "Renter occupied" ~ "Renter"
  )) |> 
  mutate(age = case_when(
    age == "15 to 24 years" ~ "34 years and under",
    age == "25 to 34 years" ~ "34 years and under",
    age == "35 to 44 years" ~ "35 to 64 years",
    age == "45 to 54 years" ~ "35 to 64 years",
    age == "55 to 59 years" ~ "35 to 64 years",
    age == "60 to 64 years" ~ "35 to 64 years",
    age == "65 to 74 years" ~ "65 years and over",
    age == "75 to 84 years" ~ "65 years and over",
    age == "85 years and over" ~ "65 years and over"
  )) |> 
  drop_na()


```

```{r}
#| label: fig-ho-age-plot
#| fig.cap: "Homeownership rate by age group"

b25007_data <- read_rds("data/b25007_data.rds") |> 
  filter(NAME %in% pha_names) |> 
  select(-moe) |> 
  mutate(age = case_when(
    age == "Householder 15 to 24 years" ~ "34 years and under",
    age == "Householder 25 to 34 years" ~ "34 years and under",
    age == "Householder 35 to 44 years" ~ "35 to 64 years",
    age == "Householder 45 to 54 years" ~ "35 to 64 years",
    age == "Householder 55 to 59 years" ~ "35 to 64 years",
    age == "Householder 60 to 64 years" ~ "35 to 64 years",
    age == "Householder 65 to 74 years" ~ "65 years and over",
    age == "Householder 75 to 84 years" ~ "65 years and over",
    age == "Householder 85 years and over" ~ "65 years and over"
  )) |> 
  group_by(NAME, year, tenure, age) |> 
  summarise(estimate = sum(estimate)) |> 
  group_by(year, tenure, age) |> 
  summarise(estimate = sum(estimate)) |> 
  group_by(year, age) |> 
  mutate(pct = estimate/sum(estimate)) |> 
  filter(tenure == "Homeowner")

ho_age_plot <- ggplot(b25007_data,
       aes(x = year, 
           y = pct, 
           fill = age,
           data_id = pct,
           tooltip = label_percent(accuracy = 0.1)(pct))) +
  facet_wrap(~age, nrow = 1) +
  geom_col(position = "dodge") + 
  geom_col_interactive(position = "dodge", size = 2) +
  scale_y_continuous(labels = label_percent()) +
  scale_fill_pha() +
  labs(title = "Homeownership rate by age group",
       subtitle = "2016 to 2020",
       fill = "Locality",
       caption = "**Source:** U.S. Census Bureau, American Community Survey, Table B25007.") +
  theme_pha() +
  add_zero_line("y") +
  theme(axis.text.x = element_text(angle = 90))

if (knitr::is_html_output()) {
  
  girafe(ggobj = ho_age_plot,
         height_svg = 4) 
  
} else {
  
  ho_age_plot
  
  }

```

### By race and ethnicity

Across the region, the homeownership gap remains wide between white households and households of color. White households in the Richmond area are the only group with a homeownership rate above 70 percent. However, several other groups---including Asian, multiracial, and Black households---have seen slight increases in their homeownership rates since 2016. At the same time, homeownership rates have fallen slightly for Hispanic or Latino households and those of another race.

```{r ho-race-data, eval=FALSE}
 
b25003_tables <- paste0("B25003", LETTERS[2:9])

b25003_race_vars <- load_variables(2020, "acs5") %>%
  filter(str_sub(name, end = 7) %in% b25003_tables) %>%
  filter(str_detect(name, "PR") == FALSE)

concept_to_race <- function(x) {
  out <- x %>%
    str_remove_all("TENURE \\(|\\)") %>%
    str_to_title() %>%
    str_replace_all("And", "and") %>%
    str_replace_all("Or", "or") %>%
    str_remove_all(" Alone")

  out
}

b25003_race_clean <- b25003_race_vars %>%
  mutate(race = concept_to_race(concept)) %>%
  separate(label, into = c("est", "total", "tenure"), sep = "!!") %>%
  select(variable = name, race, tenure) %>%
  mutate(across(.fns = ~str_remove_all(.x, ":")),
         across(.fns = ~str_remove_all(.x, " --")),
         across(.fns = ~str_replace_all(.x, "total", "All")),
         across(.fns = ~str_replace_all(.x, "Tenure", "All"))) |> 
  mutate(race = case_when(
    race == "Black or African American Householder" ~ "Black",
    race == "American Indian and Alaska Native Householder" ~ "Another race",
    race == "Asian Householder" ~ "Asian",
    race == "Native Hawaiian and Other Pacific Islander Householder" ~ "Another race",
    race == "Some Other Race Householder" ~ "Another race",
    race == "Two or More Races Householder" ~ "Multiracial",
    race == "White, Not Hispanic or Latino Householder" ~ "White, non-Hispanic",
    race == "Hispanic or Latino Householder" ~ "Hispanic or Latino"
  )) |> 
  drop_na()

b25003_race_raw <- map_dfr(b25003_tables, function(tb) {
  yearly_data <- map_dfr(years, function(yr) {

    acs_pull <- get_acs(
      geography = "county",
      table = tb,
      year = yr,
      state = "VA",
      cache_table = TRUE
    ) %>%
      left_join(b25003_race_clean, by = "variable")

    acs_rearranged <- acs_pull %>%
      mutate(year = yr) %>%
      select(variable, year, locality = NAME, fips = GEOID, race, tenure,
             estimate, moe)

    acs_rearranged
  })
  yearly_data
})

b25003_race_raw <- b25003_race_raw |>
  filter(fips %in% rr) |> 
  drop_na()

b25003_race_data <- b25003_race_raw |>
  select(year, locality, fips, race, tenure, estimate) |>
  mutate(locality = str_remove_all(locality, ", Virginia"),
         tenure = case_when(
           tenure == "Owner occupied" ~ "Homeowner",
           TRUE ~ "Renter"
         )) |>
  group_by(year, locality, fips, race, tenure) |>
  summarise(estimate = sum(estimate))

write_rds(b25003_race_data, "data/b25003_race_data.rds")

```

```{r}
#| label: fig-ho-race-plot
#| fig.cap: "Homeownership rate by race and ethnicity"

b25003_race_data <- read_rds("data/b25003_race_data.rds") |> 
  filter(locality %in% pha_names) |> 
  group_by(year, tenure, race) |> 
  summarise(estimate = sum(estimate)) |> 
  group_by(year, race) |> 
  mutate(pct = estimate/sum(estimate)) |> 
  filter(tenure == "Homeowner") |> 
  ungroup() |> 
  mutate(race = fct_reorder(str_wrap(race, width = 12), pct, .desc = TRUE))

ho_race_plot <- ggplot(b25003_race_data,
       aes(x = year, 
           y = pct, 
           fill = race,
           data_id = pct,
           tooltip = label_percent(accuracy = 0.1)(pct))) +
  facet_wrap(~race, nrow = 1) +
  geom_col(position = "dodge") + 
  geom_col_interactive(position = "dodge", size = 2) +
  scale_y_continuous(labels = label_percent()) +
  scale_fill_pha() +
  labs(title = "Homeownership rate by race and ethnicity",
       subtitle = "2016 to 2020",
       fill = "Locality",
       caption = "**Source:** U.S. Census Bureau, American Community Survey, Table B25003.") +
  theme_pha() +
  add_zero_line("y") +
  theme(axis.text.x = element_text(angle = 90))

if (knitr::is_html_output()) {
  
  girafe(ggobj = ho_race_plot,
         height_svg = 4) 
  
} else {
  
  ho_race_plot
  
  }

```

## For-sale market

### Closed sales

Home sales in the region continued to follow seasonal patterns during the COVID-19 pandemic. All localities saw reductions in typical sales volumes during early parts of the pandemic (spring to early summer 2020)---no doubt a result of stay-at-home orders. But by 2021, sales volume began to climb back as [historically low interest rates](https://www.marketwatch.com/story/mortgage-rates-drop-to-new-record-low-as-coronavirus-cases-climb-11605802099) incentivized home buying. 

```{r sales-data, eval=FALSE}

# Pull in MLS data csv for each county from 2017 to 2022 by month for four major localities by month as of July 11, 2022.

# CVR MLS Filter: Property type - Single Family, Condo/Town

# Data Pull: Time Frame - Past 5 Years; Statistic = Sales, Number of; Group By - Month

chesterfield_sales <- read_csv("data/chesterfield_num_sales.csv") |> 
  clean_names() |> 
  mutate(geography = "Chesterfield County")

hanover_sales <- read_csv("data/hanover_num_sales.csv") |> 
  clean_names() |> 
  mutate(geography = "Hanover County")

henrico_sales <- read_csv("data/henrico_num_sales.csv") |> 
  clean_names() |> 
  mutate(geography = "Henrico County")

richmond_sales <- read_csv("data/richmond_num_sales.csv") |> 
  clean_names() |> 
  mutate(geography = "Richmond City")

pha_sales_list <- list(chesterfield_sales, hanover_sales, henrico_sales, richmond_sales)

clean_data <- function(df){
  df |> pivot_longer(cols = starts_with("sales"),
    names_to = "label",
    values_to = "sales",
    values_drop_na = TRUE
  ) |> 
mutate(year = substr(label, 17,20))
}

pha_sales <- map_dfr(pha_sales_list, clean_data) |> 
  select(geography, year, month, sales)

pha_sales$month <- match(pha_sales$month, month.abb)

pha_sales <- pha_sales |> 
  mutate(date = make_date(year, month)) 

write_rds(pha_sales, "data/pha_sales.rds")

```

```{r}
#| label: fig-sales-plot
#| fig.cap: "Monthly home sales by locality"

pha_sales <- read_rds("data/pha_sales.rds")

sales_plot <- ggplot(pha_sales,
       aes(x = date, y = sales, fill = geography,
           data_id = sales, tooltip = sales)) +
  geom_col() +
  geom_col_interactive(size = 2) +
  facet_wrap(~geography) +
  scale_y_continuous(labels = label_comma()) +
  scale_x_date(date_breaks = "1 year", date_labels = "%Y") +
  scale_fill_pha() +
  labs(title = "Monthly home sales by locality",
       subtitle = "January 2017 to August 2022",
       caption = "**Source:** Central Virginia Regional Multiple Listing Service.") +
  theme_pha() +
  add_zero_line("y")

if (knitr::is_html_output()) {
  
  girafe(ggobj = sales_plot,
         height_svg = 4) 
  
} else {
  
  sales_plot
  
  }

```

Chesterfield County continued to lead the region in home sales---hitting a monthly peak in June 2021, with a total of 809 sales. In nearly all localities except for Chesterfield County, the average monthly home sales has largely remained the same. Only in Chesterfield County was there a more than 10 percent increase in average monthly home sales between 2019 and 2021.

```{r}
#| label: fig-sales-avg-plot
#| fig.cap: "Average monthly home sales by locality"

avg_sales <- pha_sales |> 
  group_by(year, geography) |> 
  summarise(average = mean(sales))

avg_sales_plot <- ggplot(avg_sales,
       aes(x = year, y = average, fill = geography,
           data_id = average, tooltip = label_comma(accuracy = 1)(average))) +
  geom_col() +
  geom_col_interactive(size = 2) +
  facet_wrap(~geography) +
  scale_y_continuous(labels = label_comma()) +
  scale_fill_pha() +
  labs(title = "Average monthly home sales by locality",
       subtitle = "2017 to 2022 YTD",
       caption = "**Source:** Central Virginia Regional Multiple Listing Service.") +
  theme_pha() +
  add_zero_line("y")

if (knitr::is_html_output()) {
  
  girafe(ggobj = avg_sales_plot,
         height_svg = 4) 
  
} else {
  
  avg_sales_plot
  
  }

```

### Sales price

Median home prices have continued to climb in the Richmond Region---reaching over \$300,000 in all four major localities. The greatest price increases have occurred in the City of Richmond during 2022, where the median home price went from \$303,941 in February to \$389,950 in June, a 28 percent increase. Home prices continue to remain high in spite of [rising mortgage interest rates](https://www.nar.realtor/magazine/real-estate-news/economy/mortgage-rates-october-20-2022). 

Hanover County remains the most expensive locality in the region with a median home price of \$423,250 as of September 2022, followed by the Chesterfield County (\$371,273), Henrico County (\$349,950), and the City of Richmond (\$325,500).

```{r sales-price-data, eval=FALSE}

# Pull in MLS data csv for each county from 2017 to 2022 by month for four major localities by month.

# CVR MLS Filter: Property type - Single Family, Condo/Town

# Data Pull: Time Frame - Past 5 Years; Statistic = Sales Price, Median; Group By - Month

# Median sales price by month

chesterfield_price <- read_csv("data/chesterfield_med_sales.csv") |> 
  clean_names() |> 
  mutate(geography = "Chesterfield County")

hanover_price <- read_csv("data/hanover_med_sales.csv") |> 
  clean_names() |> 
  mutate(geography = "Hanover County")

henrico_price <- read_csv("data/henrico_med_sales.csv") |> 
  clean_names() |> 
  mutate(geography = "Henrico County")

richmond_price <- read_csv("data/richmond_med_sales.csv") |> 
  clean_names() |> 
  mutate(geography = "Richmond City")

pha_price_list <- list(chesterfield_price, hanover_price, henrico_price, richmond_price)

clean_data <- function(df){
  df |> pivot_longer(cols = starts_with("sale"),
    names_to = "label",
    values_to = "med_price",
    values_drop_na = TRUE
  ) |> 
mutate(year = substr(label, 19,23))
}

pha_price <- map_dfr(pha_price_list, clean_data) |> 
  select(geography, year, month, med_price)

pha_price$month <- match(pha_price$month, month.abb)

pha_price <- pha_price |> 
  mutate(date = make_date(year, month)) |> 
  mutate(med_price = parse_number(med_price))

cpi <- read_csv("data/CPIAUCSL.csv") |> 
  select(date = DATE, cpi = CPIAUCSL) 
  

pha_price_adj <- pha_price |> 
  left_join(cpi, by = "date") |> 
  mutate(dollars = ((296.761/cpi)*med_price)) |> 
  select(geography, date, med_price, dollars, cpi)

write_rds(pha_price_adj, "data/pha_price.rds")

```

```{r}
#| label: fig-sales-price-plot
#| fig.cap: "Monthly median sales price by locality"

pha_price <- read_rds("data/pha_price.rds")

price_plot <- ggplot(pha_price,
       aes(x = date, y = dollars, color = geography)) +
  geom_line(size = 1) +
  geom_point_interactive(aes(data_id = dollars, tooltip = label_dollar()(dollars)),
                         size = 0.5) +
  facet_wrap(~geography) +
  scale_y_continuous(labels = label_dollar()) +
  scale_x_date(date_breaks = "1 year", date_labels = "%Y") +
  scale_color_pha() +
  labs(title = "Monthly median sales price by locality",
       subtitle = "January 2017 to July 2022",
       caption = "**Source:** Central Virginia Regional Multiple Listing Service.") +
  theme_pha() +
  add_zero_line("y")

if (knitr::is_html_output()) {
  
  girafe(ggobj = price_plot,
         height_svg = 4) 
  
} else {
  
  price_plot
  
  }

```

### Supply

The inventory of for-sale housing before the pandemic typically sat at two months or more---meaning that it would take two or more months to sell at current prices. A healthy level of supply has said to be five or six months worth, but in recent years the region has been below that, which indicates a strong seller's market. 

When pandemic began in March 2020, months supply dropped to two months and then by June 2020 hit a low of one month and has sat squarely there ever since. Even amid rising interest rates in 2022 and talks of a housing slump, months supply continues to remain low.

```{r supply-data}

# Pull in MLS data csv for just the region.

# Months supply by quarter

pha_supply <- read_csv("data/pha_mos_supply.csv") |> 
  pivot_longer(cols = starts_with("Months"),
    names_to = "label",
    values_to = "months_sup",
    values_drop_na = TRUE) |> 
  mutate(year = substr(label, 21,24))

pha_supply$Month <- match(pha_supply$Month, month.abb)

pha_supply <- pha_supply |> 
  mutate(date = make_date(year, Month)) |> 
  select(date, months_sup)

```

```{r}
#| label: fig-supply-plot
#| fig.cap: "Months of supply"

supply_plot <- ggplot(pha_supply,
       aes(x = date,
           y = months_sup)) +
  geom_line(size = 1, color = "#5bab8e") +
  geom_point_interactive(aes(data_id = months_sup, tooltip = months_sup),
                         size = 0.5, color = "#5bab8e") +
  scale_y_continuous(labels = label_number(suffix = " months"),
                     limits = c(0,4.5),
                     expand = c(0,0)) +
  scale_x_date(date_breaks = "1 year", date_labels = "%Y") +
  labs(title = "Months of supply",
       subtitle = "January 2017 to June 2022",
       caption = "**Source:** Central Virginia Regional Multiple Listing Service.") +
  theme_pha() +
  add_zero_line("y")

if (knitr::is_html_output()) {
  
  girafe(ggobj = supply_plot,
         height_svg = 4) 
  
} else {
  
  supply_plot
  
  }

```

### Starter homes

Starter homes provide young adults the ability to get on the first rung of the homeownership ladder. This allows many young adults the ability to build equity before their household grows (i.e. marriage and children). But starter homes are becoming more and more scarce. This has largely been the result of starter home opportunities not coming to market. In some cases, older homes occupied by seniors are not hitting the market because senior desire to age-in-place remains high or seniors simply cannot find other affordable options themselves. Starter homes are also ripe for investor flipping, which leaves first-time homebuyers competing with all cash offers. 

In addition, smaller homes do not make up a significant share of new construction stock. Smaller homes (two-bedroom or less) are often more desirable among seniors and young adults without children. The lack of this stock prevents the movement of households from different rungs along the homeownership ladder --- locking homeowners into homes that often no longer work for them.

In 2021, the Virginia REALTORS® (VAR) conducted an analysis of the number and share of starter homes sold in Virginia from 2013 to mid-2021. This analysis was included in the statewide housing study conducted by HousingForward Virginia as part of [HB 854](https://dmz1.dhcd.virginia.gov/HB854/part-3-homeownership.html#finding-2-starter-home-inventory-is-decreasing.). To calculate the number and share of starter homes sold, VAR calculated the number of homes sold that would be affordable to a household making 80 percent of AMI.

For the region, the share of starter homes sold has been in a steady decline. The greatest decrease has occurred in Chesterfield County, where the share of starter homes sold has gone from 63 percent to 46 percent. The smallest decrease occurred in Henrico County, a decrease of only 8 percentage points.

```{r starter-data}

# Utilizing data pulled by VAR for HB854; do not have data for 2022 

st_homes <- read_csv("data/var_starterhomes.csv") |> 
  subset(County_Name %in% pha_names) |> 
  mutate(FY = as.character(FY))

```

```{r}
#| label: fig-starter-plot
#| fig.cap: "Share of sold homes affordable to 80% AMI"

st_homes_plot <- ggplot(st_homes,
       aes(x = FY, y = starter_homes_pct, fill = County_Name,
           data_id = starter_homes_pct,
           tooltip = label_percent(accuracy = 1)(starter_homes_pct))) +
  geom_col() +
  geom_col_interactive(size = 2) +
  facet_wrap(~County_Name) +
  scale_y_continuous(labels = label_percent(),
                     limits = c(0,.75)) +
  scale_fill_pha() +
  labs(title = "Share of sold homes affordable to 80% AMI",
       subtitle = "2013 to 2021",
       caption = "**Source:** Virginia REALTORS.") +
  theme_pha() +
  add_zero_line("y")

if (knitr::is_html_output()) {
  
  girafe(ggobj = st_homes_plot,
         height_svg = 4) 
  
} else {
  
  st_homes_plot
  
  }
  
```

## New construction versus resale

### Sales price

The affordability of resale homes compared to new construction has often made them the first rung on the homeownership ladder. But since the start of the pandemic, the median resale home price has risen above the \$300,000 mark and in June 2022 reached a high of \$371,250.

During this timeframe, new construction median home prices have remained above \$350,000 and throughout 2022 so far have stayed above \$400,000. On average, there is a \$89,127 difference between new construction and resale sales price---leaving new construction significantly out of reach for lower income households.

```{r comp-price-data, eval=FALSE}

newconstruction_price <- read_csv("data/pha_price_new.csv") |> 
  clean_names() |> 
  mutate(type = "New Construction")

resale_price <- read_csv("data/pha_price_resale.csv") |> 
  clean_names() |> 
  mutate(type = "Resale")

pha_comp <- list(newconstruction_price, resale_price)

clean_data <- function(df){
  df |> pivot_longer(cols = starts_with("sale"),
    names_to = "label",
    values_to = "med_price",
    values_drop_na = TRUE
  ) |> 
mutate(year = substr(label, 19,23))
}

pha_comp <- map_dfr(pha_comp, clean_data) |> 
  select(type, year, month, med_price)

pha_comp$month <- match(pha_comp$month, month.abb)

pha_price_comp <- pha_comp |> 
  mutate(date = make_date(year, month)) |> 
  mutate(med_price = parse_number(med_price))

write_rds(pha_price_comp, "data/pha_price_comp.rds")

```

```{r}
#| label: fig-comp-price-plot
#| fig.cap: "Median price of new construction and resale"

pha_price_comp <-  read_rds("data/pha_price_comp.rds")

price_comp_plot <- ggplot(pha_price_comp,
       aes(x = date, y = med_price, color = type)) +
  geom_line(size = 1) +
  geom_point_interactive(aes(data_id = med_price, tooltip = label_dollar()(med_price)),
                         size = 0.5) +
  scale_y_continuous(labels = label_dollar()) +
  scale_x_date(date_breaks = "1 year", date_labels = "%Y") +
  scale_color_pha() +
  labs(title = "Median price of new construction and resale",
       subtitle = "January 2017 to August 2022",
       caption = "**Source:** Central Virginia Regional Multiple Listing Service.") +
  theme_pha() +
  theme(legend.position = "right") +
  add_zero_line("y")

if (knitr::is_html_output()) {
  
  girafe(ggobj = price_comp_plot,
         height_svg = 4) 
  
} else {
  
  price_comp_plot
  
  }  

```

### Bedrooms

The majority of home sales in the region have been for three- and four-bedroom homes --- roughly three in four homes sold in the past five years. Nuances exist at either end of the bedroom spectrum. 

New construction with one- to two-bedrooms has been increasing --- going from six percent of sales in 2017 to nine percent in 2022 YTD. At the other end, new construction of five or more bedroom homes has increased as well with an increase of three percent (15 percent of sales in 2017 to 18 percent in 2022 YTD). For resale homes, the share of homes by bedroom has remained largely unchanged each year.

```{r comp-br-data, eval=FALSE}

# New construction versus Resale by bedrooms - total sales 
# 1-2 bedroom // 3-4 bedroom // 5 + bedroom
# As of 7.27.22

nc_2br <- read_csv("data/pha_nc_2br.csv") |> 
  mutate(type = "New Construction") |> 
  mutate(br = "1-2 bedroom")

nc_4br <- read_csv("data/pha_nc_4br.csv") |> 
  mutate(type = "New Construction")|> 
  mutate(br = "3-4 bedroom")

nc_5br <- read_csv("data/pha_nc_5br.csv") |> 
  mutate(type = "New Construction")|> 
  mutate(br = "5+ bedroom")

re_2br <- read_csv("data/pha_re_2br.csv") |> 
  mutate(type = "Resale")|> 
  mutate(br = "1-2 bedroom")

re_4br <- read_csv("data/pha_re_4br.csv") |> 
  mutate(type = "Resale")|> 
  mutate(br = "3-4 bedroom")

re_5br <- read_csv("data/pha_re_5br.csv") |> 
  mutate(type = "Resale")|> 
  mutate(br = "5+ bedroom")

pha_br <- list(nc_2br, nc_4br, nc_5br, re_2br, re_4br, re_5br)

pha_br_clean <- function(df){
  df |> pivot_longer(cols = starts_with("sales"),
    names_to = "label",
    values_to = "sales",
    values_drop_na = TRUE
  ) |> 
mutate(year = substr(label, 17,21))
}

pha_br_comp <- map_dfr(pha_br, pha_br_clean ) |> 
  select(type, br, year, Month, sales)

pha_br_comp$Month <- match(pha_br_comp$Month, month.abb)

pha_br_comp <- pha_br_comp |> 
  mutate(date = make_date(year, Month)) |> 
  group_by(year, type, br) |> 
  summarise(sales = sum(sales)) |> 
  mutate(percent = sales/sum(sales))

write_rds(pha_br_comp, "data/pha_br_comp.rds")

```

```{r}
#| label: fig-comp-br-plot
#| fig.cap: "Share of bedrooms by new construction and resales"

pha_br_comp <- read_rds("data/pha_br_comp.rds")

br_comp_plot <- ggplot(pha_br_comp,
       aes(x = year, y = percent, fill = br,
           data_id = percent, tooltip = label_percent(accuracy = 0.1)(percent))) +
  geom_col(position = "stack") +
  geom_col_interactive(position = "stack", size = 2) +
  facet_wrap(~type) +
  scale_y_continuous(labels = label_percent()) +
  scale_fill_pha() +
  labs(title = "Share of bedrooms by new construction and resales",
       subtitle = "2017 to 2022 YTD",
       fill = "Bedrooms",
       caption = "**Source:** Central Virginia Regional Multiple Listing Service.") +
  theme_pha() +
  theme(legend.position = "right") +
  add_zero_line("y")

if (knitr::is_html_output()) {
  
  girafe(ggobj = br_comp_plot,
         height_svg = 4) 
  
} else {
  
  br_comp_plot
  
  }

```

### Size

In the past five years, there have been clear differences in new construction and resale sales by square footage. The majority of resale homes have been under 2,000 square feet, while new construction is overwhelmingly over 2,000 square feet. These differences have clear implications on home prices (i.e. more square footage means higher prices). But across the region, minimum requirements set out by localities in zoning ordinances impact these builder decisions. 

[Building smaller homes](https://archive.curbed.com/2020/3/10/21168519/homes-for-sale-american-home-suburbs) is less profitable given the rising cost to develop a single detached home (e.g. rising land, infrastructure, and regulatory costs). In order to maximize profit, home builders need to increase square footage to recoup costs and meet development requirements.

```{r comp-sf-data, eval=FALSE}

# New construction versus Resale by SF // Total sales
# Less than 1000 SF // 1000-1999 SF // 2000-2999 SF / 3000 + SF
# As of 7.27.22

nc_999 <- read_csv("data/pha_nc_999sf.csv") |> 
  mutate(type = "New Construction") |> 
  mutate(sf = "Less than 1,000 SF")

nc_1999 <- read_csv("data/pha_nc_1999sf.csv") |> 
  mutate(type = "New Construction")|> 
  mutate(sf = "1,000-1,999 SF")

nc_2999 <- read_csv("data/pha_nc_2999sf.csv") |> 
  mutate(type = "New Construction")|> 
  mutate(sf = "2,000-2,999 SF")

nc_3000 <- read_csv("data/pha_nc_3000sf.csv") |> 
  mutate(type = "New Construction")|> 
  mutate(sf = "3,000+ SF")

re_999 <- read_csv("data/pha_re_999sf.csv") |> 
  mutate(type = "Resale") |> 
  mutate(sf = "Less than 1,000 SF")

re_1999 <- read_csv("data/pha_re_1999sf.csv") |> 
  mutate(type = "Resale")|> 
  mutate(sf = "1,000-1,999 SF")

re_2999 <- read_csv("data/pha_re_2999sf.csv") |> 
  mutate(type = "Resale")|> 
  mutate(sf = "2,000-2,999 SF")

re_3000 <- read_csv("data/pha_re_3000sf.csv") |> 
  mutate(type = "Resale")|> 
  mutate(sf = "3,000+ SF")

pha_sf <- list(nc_999, nc_1999, nc_2999, nc_3000, re_999, re_1999, re_2999, re_3000)

pha_sf_clean <- function(df){
  df |> pivot_longer(cols = starts_with("sales"),
    names_to = "label",
    values_to = "sales",
    values_drop_na = TRUE
  ) |> 
mutate(year = substr(label, 17,21))
}

pha_sf_comp <- map_dfr(pha_sf, pha_sf_clean ) |> 
  select(type, sf, year, Month, sales)

pha_sf_comp$Month <- match(pha_sf_comp$Month, month.abb)

pha_sf_comp <- pha_sf_comp |> 
  mutate(date = make_date(year, Month)) |> 
  group_by(year, type, sf) |> 
  summarise(sales = sum(sales)) |> 
  mutate(percent = sales/sum(sales))

write_rds(pha_sf_comp, "data/pha_sf_comp.rds")

```

```{r}
#| label: fig-comp-sf-plot
#| fig.cap: "Home size by new construction and resales"

pha_sf_comp <-  read_rds("data/pha_sf_comp.rds")

sf_comp_plot <- ggplot(pha_sf_comp,
       aes(x = year, y = percent,
           fill = factor(sf, levels = c("Less than 1,000 SF", "1,000-1,999 SF",
                                        "2,000-2,999 SF", "3,000+ SF")),
           data_id = percent,
           tooltip = label_percent(accuracy = 0.1)(percent))) +
  geom_col(position = "stack") +
  geom_col_interactive(position = "stack", size = 2) +
  facet_wrap(~type) +
  scale_y_continuous(labels = label_percent()) +
  scale_fill_pha() +
  labs(title = "Home size by new construction and resales",
       subtitle = "2017 to 2022 YTD",
       fill = "Square footage",
       caption = "**Source:** Central Virginia Regional Multiple Listing Service.") +
  theme_pha() +
  theme(legend.position = "right") +
  add_zero_line("y")

if (knitr::is_html_output()) {
  
  girafe(ggobj = sf_comp_plot,
         height_svg = 4) 
  
} else {
  
  sf_comp_plot
  
  }

```


