# Affordability of current housing supply {#part-3-1}

```{r}
#| label: setup

library(tidyverse)
library(tidycensus)
library(janitor)
library(optiRum)
library(scales)
library(kableExtra)
library(readxl)

# rr includes Charles City, Goochland, New Kent, and Powhatan.

rr <- c("51760", "51085", "51087", "51041",
        "51145", "51075", "51127", "51036")

pha <- c("51085", "51760", "51087", "51041")

# Set palette colors; may need to find a palette that better complements the PHA branding.

rr_names <- c("Richmond city", "Hanover County", "Henrico County", "Chesterfield County",
              "Powhatan County", "Goochland County", "New Kent County", "Charles City County")

pha_names <- c("Richmond city", "Hanover County", "Henrico County", "Chesterfield County")

rr_df <- data.frame(GEOID = rr, NAME = rr_names)

```

## Rental housing gap

```{r}
#| label: gap-data
#| eval: false

tb_18c <- read_csv("data/Table18C_2015to2019.csv")

colnames(tb_18c)[16] <- "Cost"

renter <- tb_18c |>
  clean_names() |>
  filter(line_type == "Detail") |>
  select(county, fips, year, estimate, tenure, cost, household_income) |>
  group_by(county, fips, year, tenure, cost, household_income) |>
  summarise(estimate = sum(estimate)) |>
  filter(fips %in% rr)

tb_18_match <- renter |>
  filter(tenure == "Renter occupied") |>
  mutate(cost = case_when(
    cost == "greater than RHUD30 and less than or equal to RHUD50" ~ "31 to 50 percent AMI",
    cost == "greater than RHUD50 and less than or equal to RHUD80" ~ "51 to 80 percent AMI",
    cost == "greater than RHUD80" ~ "80 percent AMI or greater",
    cost == "less than or equal to RHUD30" ~ "30 percent AMI or below"
  )) |>
  mutate(household_income = case_when(
    household_income == "greater than 100% of HAMFI" ~ "80 percent AMI or greater",
    household_income == "greater than 80% of HAMFI but less than or equal to 100% of HAMFI" ~ "80 percent AMI or greater",
    household_income == "greater than 50% of HAMFI but less than or equal to 80% of HAMFI" ~ "51 to 80 percent AMI",
    household_income == "greater than 30% of HAMFI but less than or equal to 50% of HAMFI" ~ "31 to 50 percent AMI",
    household_income == "less than or equal to 30% of HAMFI" ~ "30 percent AMI or below"
  )) |>
  group_by(county, fips, year, cost, household_income) |>
  summarise(estimate = sum(estimate))

tb_18_match <- tb_18_match |>
  mutate(match = case_when(
    cost == household_income ~ "Affordable",
    cost == "30 percent AMI or below" & household_income == "31 to 50 percent AMI" ~ "Very affordable",
    cost == "30 percent AMI or below" & household_income == "51 to 80 percent AMI" ~ "Very affordable",
    cost == "30 percent AMI or below" & household_income == "80 percent AMI or greater" ~ "Very affordable",
        cost == "31 to 50 percent AMI" & household_income == "31 to 50 percent AMI" ~ "Affordable",
    cost == "31 to 50 percent AMI" & household_income == "51 to 80 percent AMI" ~ "Very affordable",
    cost == "31 to 50 percent AMI" & household_income == "80 percent AMI or greater" ~ "Very affordable",
        cost == "31 to 50 percent AMI" & household_income == "30 percent AMI or below" ~ "Unaffordable",
    cost == "51 to 80 percent AMI" & household_income == "30 percent AMI or below" ~ "Unaffordable",
        cost == "51 to 80 percent AMI" & household_income == "31 to 50 percent AMI" ~ "Unaffordable",
    cost == "51 to 80 percent AMI" & household_income == "80 percent AMI or greater" ~ "Very affordable",
    cost == "80 percent AMI or greater" & household_income == "30 percent AMI or below" ~ "Unaffordable",
    cost == "80 percent AMI or greater" & household_income == "31 to 50 percent AMI" ~ "Unaffordable",
    cost == "80 percent AMI or greater" & household_income == "51 to 80 percent AMI" ~ "Unaffordable"
  )) |>
  mutate(gapcode = case_when(
    match == "Unaffordable" ~ "Gap",
    TRUE ~ "Matches or less than income"
  ))

write_rds(tb_18_match, "data/tb_18_match.rds")

tb_18_match <- read_rds("data/tb_18_match.rds")

gap <- tb_18_match |>
  filter(fips %in% as.numeric(pha)) |> 
  group_by(year, household_income, gapcode) |>
  summarise(estimate = sum(estimate)) |>
  mutate(estimate = case_when(
    gapcode == "Gap" ~ estimate * -1,
    gapcode == "Matches or less than income" ~ estimate
  )) |>
  filter(household_income != "80 percent AMI or greater")

write_rds(gap, "data/gap.rds")

```

Comprehensive Housing Affordability Strategy (CHAS) data provided by the Department of Housing and Urban Development (HUD) allows us to understand the cost of housing in relation to household incomes. For renters making less than 80% AMI across the region, there has been little change in the gap in affordable rental housing.

```{r}
#| label: fig-gap-plot
#| fig.cap: "Rental housing gap by AMI"

gap <- read_rds("data/gap.rds") |>
  mutate(gapcode = case_when(
    gapcode == "Gap" ~ "Unaffordable",
    TRUE ~ "Affordable"
  ))

ggplot(gap,
       aes(x = year, 
           y = estimate,
           fill = gapcode)) +
  geom_col() +
  facet_grid(~household_income) +
  scale_y_continuous(labels = label_comma()) +
  labs(title = "Rental housing gap by AMI",
       subtitle = "2015 to 2019",
       fill = "Affordability of current home") +
  theme(
    legend.position = "bottom",
    axis.title = element_blank(),
    panel.background = element_blank(),
    panel.grid.major.y = element_line(color = "grey95",
                                      size = 0.05),
    axis.ticks = element_blank()
  )

```

In 2015, there was an overall gap of 38,778 rental homes affordable to households making 80% AMI or less. By 2019, that gap had increased by 1,220 homes to reach a total gap of 38,778.

Increases in the gap occurred mainly among housing at 30 percent AMI and below, but it is important to note that a gap in housing across all income levels impacts households of any income. This accentuates the need for new affordable housing at all income levels --- but especially for 30% AMI or below households. As of 2018, these extremely low-income renters face a shortage of over 24,000 rental homes.

## Incomes versus housing costs

```{r}
#| label: income-costs-data
#| eval: false

# Load income data

b25119_cpi <- read_rds("data/b25119_cpi.rds")

renter_income <- b25119_cpi |> 
  filter(tenure == "Renter",
         NAME %in% pha_names) |> 
  select(NAME, year, estimate = cdollars, dollars20)

# Load rent data

rr_rent_annual <- read_csv("data/rr_annual_rent.csv") |> 
    pivot_longer(cols = 2:8,
               names_to = "locality",
               values_to = "rent_current") |> 
  clean_names() |> 
  mutate(NAME = str_replace(locality, "City", "city"))

# Load sales data

rr_sales_annual <- read_csv("data/rr_annual_sales.csv") |> 
  pivot_longer(cols = 2:9,
               names_to = "locality",
               values_to = "price") |> 
  clean_names() |> 
  mutate(locality = str_replace(locality, "City", "city")) |> 
  filter(locality %in% pha_names) 

# Join rents and sales to incomes

costs_income <- rr_rent_annual |> 
  left_join(renter_income, by = c("NAME", "year")) |> 
  mutate(rent = parse_number(rent_current)) |> 
  filter(NAME %in% pha_names,
         year > 2015) |> 
  select(4,1,6,7) |>
  select(locality=1,2,income=3,4) |> 
  left_join(rr_sales_annual, by = c("locality", "year"))

# Add affordable rents and sales prices

int_rates <- read_csv("data/fredmac_int_annual.csv")

downpayment <- 0.05 # 5% downpayment
closingcosts <- 0.015 # 1.5% closing costs
taxes <- 250 # Assume $250/month for taxes
ins_fees <- 150 # Assume $150/month for insurance and fees

price_calc <-  function(x, y) {
  
  monthly_cost <- x / 12 * 0.28
  monthly_pmt <- monthly_cost - (taxes + ins_fees)
  principal <- monthly_pmt * (((1-1/(1+y)^360))/(y/12))
  loan_amt <- principal/(1-closingcosts)
  price <- (loan_amt * -1) / ((downpayment) - 1)

  price
  
}

costs_income_afford <- costs_income |> 
  left_join(int_rates, by = "year") |> 
  mutate(rent_afford = income / 12 * 0.3) |> 
  mutate(price_afford = price_calc(income, annual_int))

write_rds(costs_income_afford, "data/costs_income_afford.rds")


```

```{r}
#| label: income-costs-change
#| eval: false

costs_income_change <- costs_income |> 
  group_by(locality) |> 
  arrange(year, .by_group = TRUE) |> 
  mutate(rent_chg = (rent - lag(rent)),
         price_chg = (price - lag(price)),
         inc_chg = (income - lag(income)),
         across(.cols = everything(), ~replace_na(.x, 0))) |> 
  mutate(across(.cols = c(rent_chg, price_chg, inc_chg), ~ cumsum(.x)),
         rent_pct = rent_chg/first(rent),
         price_pct = price_chg/first(price),
         inc_pct = inc_chg/first(income)) |> 
  select(1,2,9:11) |> 
  pivot_longer(cols = 3:5,
               names_to = "type",
               values_to = "pct_chg") |> 
  mutate(pct_chg = case_when(
    year > 2020 & type == "inc_pct" ~ NA_real_,
    TRUE ~ pct_chg)) |> 
  mutate(type = case_when(
    type == "inc_pct" ~ "Income",
    type == "price_pct" ~ "Home price",
    type == "rent_pct" ~ "Rent"
  ))

write_rds(costs_income_change, "data/costs_income_change.rds")

```

```{r}
#| label: income-costs-load

costs_income_afford <- read_rds("data/costs_income_afford.rds")

costs_income_change <- read_rds("data/costs_income_change.rds")

```

### Overview

Housing costs---both for-sale prices and rents---have steadily accelerated in the region since 2016. Every locality say home prices rise more than 50 percent, with average rents not far behind. Average renter incomes also increased from 2016 to 2020, although those gains were not as steady across all localities.

```{r}
#| label: fig-costs-inc-change
#| fig.cap: "Cumulative percent change in median renter income, home prices, and average rent"

ggplot(costs_income_change,
       aes(x = year,
           y = pct_chg,
           color = type)) +
  geom_line(size = 1) +
  facet_wrap(~locality, nrow = 1) +
  scale_y_continuous(labels = label_percent()) +
  labs(title = "Cumulative percent change in median renter income,\nhome prices, and average rent",
       subtitle ="2016 to 2022 (ACS income data through 2020)",
       color = "Percent change",
       caption = "Sources: U.S. Census Bureau, American Community Survey, Table B25119,\nCentral Virginia MLS, and CoStar Group, Inc.") +
  theme(axis.title = element_blank(),
        panel.background = element_blank(),
        panel.grid.major.x = element_blank(),
        legend.position = "bottom",
        axis.text.x = element_text(angle = 90, vjust = 0.5),
        panel.grid.major.y = element_line(color = "grey95",
                                          size = 0.05),
        axis.ticks = element_blank())

```

However, there are two other important takeaways:

1. Average renter income data is currently only available through 2020, while the sharpest housing price increases occurred from then through 2022.
2. Average renter incomes were already below the level necessary to afford the typical apartment or home for sale.

### Rental affordability

Market asking rents across the region have been on the incline between 2016. Still, the median incomes for renters in Chesterfield and Henrico---at least from 2016 to 2020---could afford average rents. That was not the case for Henrico and Richmond, where the monthly rental price affordability gaps were \$20 and \$218, respectively.

::: callout-tip

#### Calculating rental affordability

In this chapter, an "affordable rent" is no more than 30 percent of a household's gross monthly income. Any rent amount higher than this level would make the renter cost-burdened.

:::

```{r}
#| label: fig-rent-afford
#| fig.cap: "Average rents versus affordable rents for median renter income"

rent_afford <- costs_income_afford |> 
  select(1, 2, 4, 7) |> 
  pivot_longer(cols = 3:4,
               names_to = "type") |> 
  mutate(type = case_when(
    type == "rent" ~ "Average rent",
    TRUE ~ "Affordable rent"
  ))

ggplot(rent_afford,
       aes(x = year,
           y = value,
           fill = type)) +
  geom_col(position = "dodge") +
  facet_wrap(~locality, nrow = 1) +
  scale_x_continuous(n.breaks = 7) +
  scale_y_continuous(labels = label_dollar()) +
  labs(title = "Average rents versus affordable rents for median renter income",
       subtitle ="2016 to 2022 (ACS income data through 2020)",
       caption = "Sources: U.S. Census Bureau, American Community Survey,\nTable B25119 and CoStar Group, Inc.") +
  theme(axis.title = element_blank(),
        panel.background = element_blank(),
        panel.grid.major.x = element_blank(),
        legend.position = "bottom",
        legend.title = element_blank(),
        axis.text.x = element_text(angle = 90, vjust = 0.5),
        panel.grid.major.y = element_line(color = "grey95",
                                          size = 0.05),
        axis.ticks = element_blank())

```

### Homeownership affordability

To determine how affordable homeownership is at the median renter income, we can calculate the maximum home sales price affordable to a buyer with that income. To make these estimates, we make the following simplified assumptions:

  -   5 percent down payment
  -   1.5 percent in closing costs
  -   \$250 per month for property taxes
  -   \$150 per month for insurance and other costs

For underwriting purposes, we assume that the monthly mortgage payment plus these costs can not exceed 28 percent of the buyer's gross income. For example, a renter earning \$50,000 can afford a monthly housing cost no more than \$1,166.67.

To determine the maximum principal amount, and the subsequent sales price, we assume a standard 30-year fixed-rate mortgage using the average annual interest rates published by Freddie Mac^[Freddie Mac, [30-Year Fixed-Rate Mortgages Since 1971](https://www.freddiemac.com/pmms/pmms30).]. The 2022 value is the average through August. The figure below shows these interest rates used for the homeowner affordability analysis.

```{r}
#| label: fig-int-rates
#| fig-cap: "Average annual rates for 30-year fixed-rate mortgages"

ggplot(costs_income_afford,
       aes(x = year,
           y = annual_int)) +
  geom_line(size = 1,
            color = "#619cff") +
  geom_text(aes(label = label_percent()(annual_int)),
            nudge_y = 0.004,
            color = "#619cff",
            size = 3) +
  scale_y_continuous(labels = label_percent(accuracy = 0.01),
                     limits = c(0,0.055),
                     n.breaks = 6) +
  scale_x_continuous(n.breaks = 7) +
  labs(title = "Average annual rates for 30-year fixed-rate mortgages",
       subtitle ="2022 rate current through August",
       caption = "Source: Freddie Mac, Primary Mortgage Market Survey.") +
  theme(axis.title = element_blank(),
        panel.background = element_blank(),
        panel.grid.major.x = element_blank(),
        legend.title = element_blank(),
        panel.grid.major.y = element_line(color = "grey95",
                                          size = 0.05),
        axis.ticks = element_blank())

```

The figure below shows these maximum affordable home sales prices versus actual median sales prices for each locality from 2016 through 2020. Only median sales prices are shown for 2021 and 2022 year-to-date, since renter income estimates from ACS are only available through 2020.

```{r}
#| label: fig-price-afford
#| fig.cap: "Median sales price versus maximum home price affordable to median renter income"

price_afford <- costs_income_afford |> 
  select(1, 2, 5, 8) |> 
  pivot_longer(cols = 3:4,
               names_to = "type") |> 
  mutate(type = case_when(
    type == "price" ~ "Median sales price",
    TRUE ~ "Maximum affordable home price"
  ))

ggplot(price_afford,
       aes(x = year,
           y = value,
           fill = type)) +
  geom_col(position = "dodge") +
  facet_wrap(~locality, nrow = 1) +
  scale_x_continuous(n.breaks = 7) +
  scale_y_continuous(labels = label_dollar()) +
  labs(title = "Median sales price versus\nmaximum home price affordable to median renter income",
       subtitle ="2016 to 2022 (ACS income data through 2020)",
       caption = "Sources: U.S. Census Bureau, American Community Survey,\nTable B25119 and CVR MLS.") +
  theme(axis.title = element_blank(),
        panel.background = element_blank(),
        panel.grid.major.x = element_blank(),
        legend.position = "bottom",
        legend.title = element_blank(),
        axis.text.x = element_text(angle = 90, vjust = 0.5),
        panel.grid.major.y = element_line(color = "grey95",
                                          size = 0.05),
        axis.ticks = element_blank())

```

In the three counties, median sales prices were generally just out of reach for the average renter's income from 2016 through 2019. Then, historically low interest rates in 2020 increased buyers' purchasing power to put the median-priced home within reach.

The purchase price gap in Richmond, however, has continued---even with lower rates, the average renter could not afford to buy a home more than \$200,000 in 2020. By 2021, the median-priced home in the city topped \$300,000 for the first time.

## Wage-based affordability

In a [previous chapter](part-1-3.qmd#wages), the five most common occupation categories in the Richmond MSA were determined from the latest (May 2021) BLS Occupational Employment and Wage Statistics (OEWS) data. These wages are an opportunity to assess the ability of many of the region's workers to afford rent or purchase a home. Annual salary amounts range from \$75,800 for workers in Business and Financial Operations, to \$23,650 for those in Food Preparation and Serving Related positions.

```{r}
#| label: oews-data
#| eval: false

oews_occ <- read_rds("data/oews_occ.rds")

occ_afford <- oews_occ |> 
  filter(!is.na(occ_code)) |> 
  select(group = 2, income = 4) |> 
  mutate(type = "Occupation", .before = 1) |> 
  mutate(group = str_remove_all(group, " Occupations"))

locality_costs <- costs_income_afford |> 
  filter(year == 2022) |> 
  select(group = 1, annual_int, income, rent, price) |> 
  mutate(type = "Locality", .before = 1)

occ_locality_afford <- locality_costs |> 
  bind_rows(occ_afford) |> 
  mutate(annual_int = replace_na(annual_int, first(annual_int))) |> 
  mutate(rent = case_when(
    is.na(rent) ~ income / 12*.3,
    TRUE ~ rent)) |> 
  mutate(price = case_when(
    is.na(price) ~ price_calc(income, annual_int),
    TRUE ~ price))

write_rds(occ_locality_afford, "data/occ_locality_afford.rds")

```

```{r}
#| label: fig-occ-salary
#| fig.cap: "Median annual salaries for the five most common occupation categories"

occ_locality_afford <- read_rds("data/occ_locality_afford.rds")

occ_locality_afford |> 
  filter(type == "Occupation") |>
  mutate(group = str_wrap(group, width = 16)) |> 

ggplot(aes(x = reorder(group, income, decreasing = T),
           y = income,
           fill = group)) +
  geom_col() +
  scale_y_continuous(labels = label_dollar()) +
  labs(title = "Median annual salaries for the five most common occupation categories",
       subtitle = "Richmond, VA MSA | May 2021",
       caption = "Source: U.S. Bureau of Labor Statistics, Occupational Employment and Wage Statistics.") +
  theme(panel.background = element_blank(),
        legend.position = "none",
        axis.title = element_blank(),
        axis.ticks = element_blank(),
        panel.grid.major.y = element_line(color = "grey95",
                                          size = 0.05))

```

### Rental affordability

Every occupation except for Business and Financial Operations supports an affordable rent less than \$1,000. Apartments in the region for less than this are hard to come by, and average rents across localities are now hundreds of dollars more. 

```{r}
#| label: fig-occ-rent
#| fig.cap: "Affordable rent by median occupation wage versus average rents"

occ_locality_afford |> 
  filter(type == "Occupation") |>
  mutate(group = str_wrap(group, width = 16)) |> 

ggplot(aes(x = reorder(group, rent, decreasing = T),
           y = rent,
           fill = group)) +
  geom_col() +
  geom_hline(yintercept = with(occ_locality_afford, rent[match("Chesterfield County", group)])) +
  annotate(geom = "text",
           label = "Chesterfield",
           x = 5,
           y = with(occ_locality_afford, rent[match("Chesterfield County", group)]),
           vjust = -.5,
           hjust = -.85) +
  geom_hline(yintercept = with(occ_locality_afford, rent[match("Hanover County", group)])) +
  annotate(geom = "text",
           label = "Hanover",
           x = 5,
           y = with(occ_locality_afford, rent[match("Hanover County", group)]),
           vjust = 1,
           hjust = -1.25) +
  geom_hline(yintercept = with(occ_locality_afford, rent[match("Henrico County", group)])) +
  annotate(geom = "text",
           label = "Henrico",
           x = 5,
           y = with(occ_locality_afford, rent[match("Henrico County", group)]),
           vjust = 0.15,
           hjust = -1.33) +
  geom_hline(yintercept = with(occ_locality_afford, rent[match("Richmond city", group)])) +
  annotate(geom = "text",
           label = "Richmond",
           x = 5,
           y = with(occ_locality_afford, rent[match("Richmond city", group)]),
           vjust = 1,
           hjust = -1) +
  coord_cartesian(clip = "off") +
  #scale_x_discrete(expand = expand_scale(add = c(0.5,2))) +
  scale_y_continuous(labels = label_dollar()) +
  labs(title = "Affordable rent by median occupation wage versus average rents",
       subtitle = "Lines show current average rents by locality as of August 2022",
       caption = "Sources: U.S. Bureau of Labor Statistics, Occupational Employment and\nWage Statistics; CoStar Group, Inc.") +
  theme(panel.background = element_blank(),
        legend.position = "none",
        axis.title = element_blank(),
        axis.ticks = element_blank(),
        panel.grid.major.y = element_line(color = "grey95",
                                          size = 0.05),
        plot.margin = margin(10,80,10,10, unit = "pt"))

```

However, these average rents *can* be relatively attainable if households have two earners with annual salaries each above \$30,000. Still, even dual-income households where both workers are in retail and/or restaurant jobs would currently struggle to find an affordable apartment anywhere in the region.

### Homeownership affordability

Similarly, all occupation categories other than Business and Financial Operations command wages that make homeownership a challenging goal, especially for single-earner households. Most of these common jobs, on their own, would support only home purchases prices below \$140,000. This does not even consider related financial barriers often faced by lower-income workers, such as savings for down payments and acceptable credit scores. 

```{r}
#| label: fig-occ-price
#| fig.cap: "Maximum home price by median occupation wage versus median sales prices"

occ_locality_afford |> 
  filter(type == "Occupation") |>
  mutate(group = str_wrap(group, width = 16)) |> 

ggplot(aes(x = reorder(group, price, decreasing = T),
           y = price,
           fill = group)) +
  geom_col() +
  geom_hline(yintercept = with(occ_locality_afford, price[match("Chesterfield County", group)])) +
  annotate(geom = "text",
           label = "Chesterfield",
           x = 5,
           y = with(occ_locality_afford, price[match("Chesterfield County", group)]),
           vjust = -0.3,
           hjust = -.85) +
  geom_hline(yintercept = with(occ_locality_afford, price[match("Hanover County", group)])) +
  annotate(geom = "text",
           label = "Hanover",
           x = 5,
           y = with(occ_locality_afford, price[match("Hanover County", group)]),
           vjust = 0,
           hjust = -1.24) +
  geom_hline(yintercept = with(occ_locality_afford, price[match("Henrico County", group)])) +
  annotate(geom = "text",
           label = "Henrico",
           x = 5,
           y = with(occ_locality_afford, price[match("Henrico County", group)]),
           vjust = -.25,
           hjust = -1.33) +
  geom_hline(yintercept = with(occ_locality_afford, price[match("Richmond city", group)])) +
  annotate(geom = "text",
           label = "Richmond",
           x = 5,
           y = with(occ_locality_afford, price[match("Richmond city", group)]),
           vjust = 1.25,
           hjust = -1) +
  coord_cartesian(clip = "off") +
  #scale_x_discrete(expand = expand_scale(add = c(0.5,2))) +
  scale_y_continuous(labels = label_dollar(),
                     limits = c(0, 500000)) +
  labs(title = "Maximum home price by median occupation wage versus median sales prices",
       subtitle = "Lines show median sales prices by locality as of August 2022",
       caption = "Sources: U.S. Bureau of Labor Statistics, Occupational Employment and\nWage Statistics; CVR MLS.") +
  theme(panel.background = element_blank(),
        legend.position = "none",
        axis.title = element_blank(),
        axis.ticks = element_blank(),
        panel.grid.major.y = element_line(color = "grey95",
                                          size = 0.05),
        plot.margin = margin(10,80,10,10, unit = "pt"))

```